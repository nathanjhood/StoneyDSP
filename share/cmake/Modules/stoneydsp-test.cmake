#[===============================[Include Guard]===============================]
include_guard(GLOBAL)

set(_version 0.0.0)

if(COMMAND stoneydsp_add_test)
    if(NOT DEFINED _stoneydsp_test_script_version OR NOT(_version STREQUAL _stoneydsp_test_script_version))
        message(WARNING "More than one 'stoneydsp-core.cmake' version has been included in this project.")
    endif()

    # 'stoneydsp-core.cmake' has already been included! Don't do anything
    return()
endif()

set(_stoneydsp_test_script_version "${_version}" CACHE INTERNAL "Current 'stoneydsp-core.cmake' version. Used for checking for conflicts")

set(_stoneydsp_test_script_file "${CMAKE_CURRENT_LIST_FILE}" CACHE INTERNAL "Path to current 'stoneydsp-core.cmake' script")

if(NOT DEFINED STONEYDSP_BINARY_DIR)
    set(STONEYDSP_BINARY_DIR "${CMAKE_BINARY_DIR}")
endif(NOT DEFINED STONEYDSP_BINARY_DIR)

#[=======================[stoneydsp_add_catch2_session]=======================]
include(CMakeDependentOption)
cmake_dependent_option(STONEYDSP_TEST_CATCH2_SESSION_TARGET_INSTALL "Notes" ON "STONEYDSP_BUILD_TEST" ON)
cmake_dependent_option(STONEYDSP_TEST_CATCH2_SESSION_TARGET_EXPORT "Notes" ON "STONEYDSP_BUILD_TEST" ON)

#[==[
Adds target: `stoneydsp::catch2_session`
]==]
function(stoneydsp_add_catch2_session)
    find_package(Catch2 REQUIRED 3.7.1)

    # Generate target properties
    set(STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME "catch2session")
    set(STONEYDSP_TEST_CATCH2_SESSION_VERSION_MAJOR "0")
    set(STONEYDSP_TEST_CATCH2_SESSION_VERSION_MINOR "0")
    set(STONEYDSP_TEST_CATCH2_SESSION_VERSION_BUILD "0")
    set(STONEYDSP_TEST_CATCH2_SESSION_VERSION "${STONEYDSP_TEST_CATCH2_SESSION_VERSION_MAJOR}.${STONEYDSP_TEST_CATCH2_SESSION_VERSION_MINOR}.${STONEYDSP_TEST_CATCH2_SESSION_VERSION_BUILD}")
    set(STONEYDSP_TEST_CATCH2_SESSION_HEADERS_FILESET_NAME "stoneydsp_TEST_CATCH2_SESSION_PUBLIC_HEADERS")

    # Set files
    set(STONEYDSP_TEST_CATCH2_SESSION_HPP_FILE "${STONEYDSP_TEST_DIR}/catch2session.hpp")
    set(STONEYDSP_TEST_CATCH2_SESSION_CPP_FILE "${STONEYDSP_TEST_DIR}/catch2session.test.cpp")

    # List header files (public)
    set(STONEYDSP_TEST_CATCH2_SESSION_HEADER_FILES)
    list(APPEND STONEYDSP_TEST_CATCH2_SESSION_HEADER_FILES
        "${STONEYDSP_TEST_CATCH2_SESSION_HPP_FILE}"
    )

    # List source files (private)
    set(STONEYDSP_TEST_CATCH2_SESSION_SOURCE_FILES)
    list(APPEND STONEYDSP_TEST_CATCH2_SESSION_SOURCE_FILES
        "${STONEYDSP_TEST_CATCH2_SESSION_CPP_FILE}"
    )

    # List link libraries (private)
    set(STONEYDSP_TEST_CATCH2_SESSION_LINK_LIBRARIES_PRIVATE)
    list(APPEND STONEYDSP_TEST_CATCH2_SESSION_LINK_LIBRARIES_PRIVATE
    )

    # List link libraries (public)
    set(STONEYDSP_TEST_CATCH2_SESSION_LINK_LIBRARIES_PUBLIC)
    list(APPEND STONEYDSP_TEST_CATCH2_SESSION_LINK_LIBRARIES_PUBLIC
        Catch2::Catch2
        ${STONEYDSP_BRAND}::${STONEYDSP_SLUG}::${STONEYDSP_TARGET_NAME}
    )

    # List link libraries (interface)
    set(STONEYDSP_TEST_CATCH2_SESSION_LINK_LIBRARIES_INTERFACE)
    list(APPEND STONEYDSP_TEST_CATCH2_SESSION_LINK_LIBRARIES_INTERFACE)

    # List compile definitions (private)
    set(STONEYDSP_TEST_CATCH2_SESSION_COMPILE_DEFINITIONS_PRIVATE)
    list(APPEND STONEYDSP_TEST_CATCH2_SESSION_COMPILE_DEFINITIONS_PRIVATE)

    # List comile definitions (public)
    set(STONEYDSP_TEST_CATCH2_SESSION_COMPILE_DEFINITIONS_PUBLIC)
    list(APPEND STONEYDSP_TEST_CATCH2_SESSION_COMPILE_DEFINITIONS_PUBLIC
        "-DSTONEYDSP_BUILD_TEST=1"
        "-DSTONEYDSP_TEST_CATCH2_SESSION_VERSION_MAJOR=${STONEYDSP_TEST_CATCH2_SESSION_VERSION_MAJOR}"
        "-DSTONEYDSP_TEST_CATCH2_SESSION_VERSION_MINOR=${STONEYDSP_TEST_CATCH2_SESSION_VERSION_MINOR}"
        "-DSTONEYDSP_TEST_CATCH2_SESSION_VERSION_BUILD=${STONEYDSP_TEST_CATCH2_SESSION_VERSION_BUILD}"
        "-DSTONEYDSP_TEST_CATCH2_SESSION_VERSION=${STONEYDSP_TEST_CATCH2_SESSION_VERSION}"
    )

    # List comile definitions (interface)
    set(STONEYDSP_TEST_CATCH2_SESSION_COMPILE_DEFINITIONS_INTERFACE)
    list(APPEND STONEYDSP_TEST_CATCH2_SESSION_COMPILE_DEFINITIONS_INTERFACE)

    add_library(${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME} OBJECT)
    add_library(${STONEYDSP_SLUG}::${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME} ALIAS ${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME})
    add_library(${STONEYDSP_BRAND}::${STONEYDSP_SLUG}::${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME} ALIAS ${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME})

    set_target_properties(${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME}
        PROPERTIES

        VERSION "${STONEYDSP_TEST_CATCH2_SESSION_VERSION}"
        SOVERSION "${STONEYDSP_TEST_CATCH2_SESSION_VERSION_MAJOR}"

        RUNTIME_OUTPUT_DIRECTORY "${STONEYDSP_BINARY_DIR}/bin"
        PDB_OUTPUT_DIRECTORY "${STONEYDSP_BINARY_DIR}/bin"
        LIBRARY_OUTPUT_DIRECTORY "${STONEYDSP_BINARY_DIR}/lib"
        ARCHIVE_OUTPUT_DIRECTORY "${STONEYDSP_BINARY_DIR}/lib"
    )

    foreach(STONEYDSP_TEST_CATCH2_SESSION_HEADER_FILE IN LISTS STONEYDSP_TEST_CATCH2_SESSION_HEADER_FILES)
        message(DEBUG "Target: ${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME} - adding header: ${STONEYDSP_TEST_CATCH2_SESSION_HEADER_FILE}")
        configure_file("${STONEYDSP_TEST_CATCH2_SESSION_HEADER_FILE}" "${STONEYDSP_TEST_CATCH2_SESSION_HEADER_FILE}")
        target_sources(${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME}
            PUBLIC
            FILE_SET ${STONEYDSP_TEST_CATCH2_SESSION_HEADERS_FILESET_NAME}
            TYPE HEADERS
            BASE_DIRS
            $<BUILD_INTERFACE:${STONEYDSP_DIR}/${STONEYDSP_TEST_DIR}>
            $<INSTALL_INTERFACE:${STONEYDSP_TEST_DIR}>
            FILES
            $<BUILD_INTERFACE:${STONEYDSP_DIR}/${STONEYDSP_TEST_CATCH2_SESSION_HEADER_FILE}>
            $<INSTALL_INTERFACE:${STONEYDSP_TEST_CATCH2_SESSION_HEADER_FILE}>
        )
        message(VERBOSE "Target: ${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME} - added header: ${STONEYDSP_TEST_CATCH2_SESSION_HEADER_FILE}")
    endforeach(STONEYDSP_TEST_CATCH2_SESSION_HEADER_FILE IN LISTS STONEYDSP_TEST_CATCH2_SESSION_HEADER_FILES)

    foreach(STONEYDSP_TEST_CATCH2_SESSION_SOURCE_FILE IN LISTS STONEYDSP_TEST_CATCH2_SESSION_SOURCE_FILES)
        message(DEBUG "Target: ${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME} - adding source: ${STONEYDSP_TEST_CATCH2_SESSION_SOURCE_FILE}")
        target_sources(${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME}
            PRIVATE
            "${STONEYDSP_TEST_CATCH2_SESSION_SOURCE_FILE}"
        )
        message(VERBOSE "Target: ${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME} - added source: ${STONEYDSP_TEST_CATCH2_SESSION_SOURCE_FILE}")
    endforeach(STONEYDSP_TEST_CATCH2_SESSION_SOURCE_FILE IN LISTS STONEYDSP_TEST_CATCH2_SESSION_SOURCE_FILES)

    foreach(STONEYDSP_TEST_CATCH2_SESSION_LINK_LIBRARY IN LISTS STONEYDSP_TEST_CATCH2_SESSION_LINK_LIBRARIES_PRIVATE)
        message(DEBUG "Target: ${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME} - linking library (private): ${STONEYDSP_TEST_CATCH2_SESSION_LINK_LIBRARY}")
        target_link_libraries(${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME}
            PRIVATE
            ${STONEYDSP_TEST_CATCH2_SESSION_LINK_LIBRARY}
        )
        message(VERBOSE "Target: ${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME} - linked library (private): ${STONEYDSP_TEST_CATCH2_SESSION_LINK_LIBRARY}")
    endforeach(STONEYDSP_TEST_CATCH2_SESSION_LINK_LIBRARY IN LISTS STONEYDSP_TEST_CATCH2_SESSION_LINK_LIBRARIES_PRIVATE)

    foreach(STONEYDSP_TEST_CATCH2_SESSION_LINK_LIBRARY IN LISTS STONEYDSP_TEST_CATCH2_SESSION_LINK_LIBRARIES_PUBLIC)
        message(DEBUG "Target: ${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME} - linking library (public): ${STONEYDSP_TEST_CATCH2_SESSION_LINK_LIBRARY}")
        target_link_libraries(${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME}
            PUBLIC
            ${STONEYDSP_TEST_CATCH2_SESSION_LINK_LIBRARY}
        )
        message(VERBOSE "Target: ${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME} - linked library (public): ${STONEYDSP_TEST_CATCH2_SESSION_LINK_LIBRARY}")
    endforeach(STONEYDSP_TEST_CATCH2_SESSION_LINK_LIBRARY IN LISTS STONEYDSP_TEST_CATCH2_SESSION_LINK_LIBRARIES_PUBLIC)

    foreach(STONEYDSP_TEST_CATCH2_SESSION_LINK_LIBRARY IN LISTS STONEYDSP_TEST_CATCH2_SESSION_LINK_LIBRARIES_INTERFACE)
        message(DEBUG "Target: ${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME} - linking library (interface): ${STONEYDSP_TEST_CATCH2_SESSION_LINK_LIBRARY}")
        target_link_libraries(${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME}
            INTERFACE
            ${STONEYDSP_TEST_CATCH2_SESSION_LINK_LIBRARY}
        )
        message(VERBOSE "Target: ${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME} - linked library (interface): ${STONEYDSP_TEST_CATCH2_SESSION_LINK_LIBRARY}")
    endforeach(STONEYDSP_TEST_CATCH2_SESSION_LINK_LIBRARY IN LISTS STONEYDSP_TEST_CATCH2_SESSION_LINK_LIBRARIES_INTERFACE)

    foreach(STONEYDSP_TEST_CATCH2_SESSION_COMPILE_DEFINITION IN LISTS STONEYDSP_TEST_CATCH2_SESSION_COMPILE_DEFINITIONS_PRIVATE)
        message(DEBUG "Target: ${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME} - adding compile definiton (private): ${STONEYDSP_TEST_CATCH2_SESSION_COMPILE_DEFINITION}")
        target_compile_definitions(${SSTONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME}
            PRIVATE
            ${STONEYDSP_TEST_CATCH2_SESSION_COMPILE_DEFINITION}
        )
        message(VERBOSE "Target: ${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME} - added compile definiton (private): ${STONEYDSP_TEST_CATCH2_SESSION_COMPILE_DEFINITION}")
    endforeach(STONEYDSP_TEST_CATCH2_SESSION_COMPILE_DEFINITION IN LISTS STONEYDSP_TEST_CATCH2_SESSION_COMPILE_DEFINITIONS_PRIVATE)

    foreach(STONEYDSP_TEST_CATCH2_SESSION_COMPILE_DEFINITION IN LISTS STONEYDSP_TEST_CATCH2_SESSION_COMPILE_DEFINITIONS_PUBLIC)
        message(DEBUG "Target: ${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME} - adding compile definiton (public): ${STONEYDSP_TEST_CATCH2_SESSION_COMPILE_DEFINITION}")
        target_compile_definitions(${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME}
            PUBLIC
            ${STONEYDSP_TEST_CATCH2_SESSION_COMPILE_DEFINITION}
        )
        message(VERBOSE "Target: ${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME} - added compile definiton (public): ${STONEYDSP_TEST_CATCH2_SESSION_COMPILE_DEFINITION}")
    endforeach(STONEYDSP_TEST_CATCH2_SESSION_COMPILE_DEFINITION IN LISTS STONEYDSP_TEST_CATCH2_SESSION_COMPILE_DEFINITIONS_PUBLIC)

    foreach(STONEYDSP_TEST_CATCH2_SESSION_COMPILE_DEFINITION IN LISTS STONEYDSP_TEST_CATCH2_SESSION_COMPILE_DEFINITIONS_INTERFACE)
        message(DEBUG "Target: ${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME} - adding compile definiton (interface): ${STONEYDSP_TEST_CATCH2_SESSION_COMPILE_DEFINITION}")
        target_compile_definitions(${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME}
            INTERFACE
            ${STONEYDSP_TEST_CATCH2_SESSION_COMPILE_DEFINITION}
        )
        message(VERBOSE "Target: ${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME} - added compile definiton (interface): ${STONEYDSP_TEST_CATCH2_SESSION_COMPILE_DEFINITION}")
    endforeach(STONEYDSP_TEST_CATCH2_SESSION_COMPILE_DEFINITION IN LISTS STONEYDSP_TEST_CATCH2_SESSION_COMPILE_DEFINITIONS_INTERFACE)

    if(STONEYDSP_TEST_CATCH2_SESSION_TARGET_INSTALL)
        # Generate export set
        install(TARGETS ${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME}
            EXPORT ${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME}Install
            COMPONENT ${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME}
            LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
            RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
            ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}"
            INCLUDES DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}"
            FILE_SET ${STONEYDSP_TEST_CATCH2_SESSION_HEADERS_FILESET_NAME} DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}"
        )

        # Install export set
        install(EXPORT ${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME}Install
            FILE "${STONEYDSP_SLUG}-${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME}-targets.cmake"
            NAMESPACE ${STONEYDSP_BRAND}::${STONEYDSP_SLUG}::
            DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/${STONEYDSP_BRAND}"
        )
    endif()

    if(STONEYDSP_TEST_CATCH2_SESSION_TARGET_EXPORT)
        # Generate export set
        export(
            SETUP ${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME}Export
            TARGET ${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME}
        )

        # Install export set
        export(
            EXPORT ${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME}Export
            FILE "lib/cmake/${STONEYDSP_BRAND}/${STONEYDSP_SLUG}-${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME}-targets.cmake"
            NAMESPACE ${STONEYDSP_BRAND}::${STONEYDSP_SLUG}::
        )
    endif()

    # Pass target properties to parent scope
    set(STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME "${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME}" PARENT_SCOPE)
    set(STONEYDSP_TEST_CATCH2_SESSION_VERSION_MAJOR "${STONEYDSP_TEST_CATCH2_SESSION_VERSION_MAJOR}" PARENT_SCOPE)
    set(STONEYDSP_TEST_CATCH2_SESSION_VERSION_MINOR "${STONEYDSP_TEST_CATCH2_SESSION_VERSION_MINOR}" PARENT_SCOPE)
    set(STONEYDSP_TEST_CATCH2_SESSION_VERSION_BUILD "${STONEYDSP_TEST_CATCH2_SESSION_VERSION_BUILD}" PARENT_SCOPE)
    set(STONEYDSP_TEST_CATCH2_SESSION_VERSION "${STONEYDSP_TEST_CATCH2_SESSION_VERSION_MAJOR}.${STONEYDSP_TEST_CATCH2_SESSION_VERSION_MINOR}.${STONEYDSP_TEST_CATCH2_SESSION_VERSION_BUILD}")
    set(STONEYDSP_TEST_CATCH2_SESSION_HEADER_FILES "${STONEYDSP_TEST_CATCH2_SESSION_HEADER_FILES}" PARENT_SCOPE)
    set(STONEYDSP_TEST_CATCH2_SESSION_SOURCE_FILES "${STONEYDSP_TEST_CATCH2_SESSION_SOURCE_FILES}" PARENT_SCOPE)
    set(STONEYDSP_TEST_CATCH2_SESSION_LINK_LIBRARIES_PRIVATE "${STONEYDSP_TEST_CATCH2_SESSION_LINK_LIBRARIES_PRIVATE}" PARENT_SCOPE)
endfunction(stoneydsp_add_catch2_session)

#[============================[stoneydsp_add_test]============================]
cmake_dependent_option(STONEYDSP_TEST_TARGET_INSTALL "Notes" ON "STONEYDSP_BUILD_TEST" ON)
cmake_dependent_option(STONEYDSP_TEST_TARGET_EXPORT "Notes" ON "STONEYDSP_BUILD_TEST" ON)

#[==[
Adds target: `stoneydsp::catch2_session`
]==]
function(stoneydsp_add_test)
    stoneydsp_add_catch2_session()

    # Generate target properties
    set(STONEYDSP_TEST_TARGET_NAME "tests")
    set(STONEYDSP_TEST_VERSION_MAJOR "0")
    set(STONEYDSP_TEST_VERSION_MINOR "0")
    set(STONEYDSP_TEST_VERSION_BUILD "0")
    set(STONEYDSP_TEST_VERSION "${STONEYDSP_TEST_VERSION_MAJOR}.${STONEYDSP_TEST_VERSION_MINOR}.${STONEYDSP_TEST_VERSION_BUILD}")
    set(STONEYDSP_TEST_HEADERS_FILESET_NAME "stoneydsp_TEST_PUBLIC_HEADERS")

    # Set files
    set(STONEYDSP_TEST_MAIN_CPP_FILE "${STONEYDSP_TEST_DIR}/main.test.cpp")
    set(STONEYDSP_TEST_UTILS_HPP_FILE "${STONEYDSP_TEST_DIR}/utils.hpp")
    set(STONEYDSP_TEST_UTILS_CPP_FILE "${STONEYDSP_TEST_DIR}/utils.test.cpp")

    # List header files (public)
    set(STONEYDSP_TEST_HEADER_FILES)
    list(APPEND STONEYDSP_TEST_HEADER_FILES
        ${STONEYDSP_TEST_UTILS_HPP_FILE}
    )

    # List source files (private)
    set(STONEYDSP_TEST_SOURCE_FILES)
    list(APPEND STONEYDSP_TEST_SOURCE_FILES
        ${STONEYDSP_TEST_MAIN_CPP_FILE}
        ${STONEYDSP_TEST_UTILS_CPP_FILE}
    )

    if(STONEYDSP_BUILD_CORE)
        set(STONEYDSP_CORE_TYPES_INT_TEST_CPP_FILE "${STONEYDSP_TEST_DIR}/${STONEYDSP_SLUG}/${STONEYDSP_CORE_TARGET_NAME}/types/int.test.cpp")
        set(STONEYDSP_CORE_TYPES_MATH_TEST_CPP_FILE "${STONEYDSP_TEST_DIR}/${STONEYDSP_SLUG}/${STONEYDSP_CORE_TARGET_NAME}/types/math.test.cpp")
        list(APPEND STONEYDSP_TEST_SOURCE_FILES
            ${STONEYDSP_CORE_TYPES_INT_TEST_CPP_FILE}
            ${STONEYDSP_CORE_TYPES_MATH_TEST_CPP_FILE}
        )
    endif()

    # List link libraries (private)
    set(STONEYDSP_TEST_LINK_LIBRARIES_PRIVATE)
    list(APPEND STONEYDSP_TEST_LINK_LIBRARIES_PRIVATE
        ${STONEYDSP_BRAND}::${STONEYDSP_SLUG}::${STONEYDSP_TARGET_NAME}
        ${STONEYDSP_BRAND}::${STONEYDSP_SLUG}::${STONEYDSP_TEST_CATCH2_SESSION_TARGET_NAME}
    )

    # List link libraries (public)
    set(STONEYDSP_TEST_LINK_LIBRARIES_PUBLIC)
    list(APPEND STONEYDSP_TEST_LINK_LIBRARIES_PUBLIC)

    # List link libraries (interface)
    set(STONEYDSP_TEST_LINK_LIBRARIES_INTERFACE)
    list(APPEND STONEYDSP_TEST_LINK_LIBRARIES_INTERFACE)

    # List compile definitions (private)
    set(STONEYDSP_TEST_COMPILE_DEFINITIONS_PRIVATE)
    list(APPEND STONEYDSP_TEST_COMPILE_DEFINITIONS_PRIVATE)

    # List compile definitions (public)
    set(STONEYDSP_TEST_COMPILE_DEFINITIONS_PUBLIC)
    list(APPEND STONEYDSP_TEST_COMPILE_DEFINITIONS_PUBLIC
        "-DSTONEYDSP_BUILD_TEST=1"
        "-DSTONEYDSP_TEST_VERSION_MAJOR=${STONEYDSP_TEST_VERSION_MAJOR}"
        "-DSTONEYDSP_TEST_VERSION_MINOR=${STONEYDSP_TEST_VERSION_MINOR}"
        "-DSTONEYDSP_TEST_VERSION_BUILD=${STONEYDSP_TEST_VERSION_BUILD}"
        "-DSTONEYDSP_TEST_VERSION=${STONEYDSP_TEST_VERSION}"
    )

    # List compile definitions (interface)
    set(STONEYDSP_TEST_COMPILE_DEFINITIONS_INTERFACE)
    list(APPEND STONEYDSP_TEST_COMPILE_DEFINITIONS_INTERFACE)

    add_executable(${STONEYDSP_TEST_TARGET_NAME})
    add_executable(${STONEYDSP_SLUG}::${STONEYDSP_TEST_TARGET_NAME} ALIAS ${STONEYDSP_TEST_TARGET_NAME})
    add_executable(${STONEYDSP_BRAND}::${STONEYDSP_SLUG}::${STONEYDSP_TEST_TARGET_NAME} ALIAS ${STONEYDSP_TEST_TARGET_NAME})

    set_target_properties(${STONEYDSP_TEST_TARGET_NAME}
        PROPERTIES

        VERSION "${STONEYDSP_TEST_VERSION}"
        SOVERSION "${STONEYDSP_TEST_VERSION_MAJOR}"

        RUNTIME_OUTPUT_DIRECTORY "${STONEYDSP_BINARY_DIR}/bin"
        PDB_OUTPUT_DIRECTORY "${STONEYDSP_BINARY_DIR}/bin"
        LIBRARY_OUTPUT_DIRECTORY "${STONEYDSP_BINARY_DIR}/lib"
        ARCHIVE_OUTPUT_DIRECTORY "${STONEYDSP_BINARY_DIR}/lib"
        BUILD_RPATH "${CMAKE_INSTALL_PREFIX}/lib"
        INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/lib"
        INSTALL_RPATH_USE_LINK_PATH TRUE
    )

    foreach(STONEYDSP_TEST_HEADER_FILE IN LISTS STONEYDSP_TEST_HEADER_FILES)
        message(DEBUG "Target: ${STONEYDSP_TEST_TARGET_NAME} - adding header: ${STONEYDSP_TEST_HEADER_FILE}")
        configure_file("${STONEYDSP_TEST_HEADER_FILE}" "${STONEYDSP_TEST_HEADER_FILE}")
        target_sources(${STONEYDSP_TEST_TARGET_NAME}
            PUBLIC
            FILE_SET ${STONEYDSP_TEST_HEADERS_FILESET_NAME}
            TYPE HEADERS
            BASE_DIRS
            $<BUILD_INTERFACE:${STONEYDSP_DIR}/${STONEYDSP_TEST_DIR}>
            $<INSTALL_INTERFACE:${STONEYDSP_TEST_DIR}>
            FILES
            $<BUILD_INTERFACE:${STONEYDSP_DIR}/${STONEYDSP_TEST_HEADER_FILE}>
            $<INSTALL_INTERFACE:${STONEYDSP_TEST_HEADER_FILE}>
        )
        message(VERBOSE "Target: ${STONEYDSP_TEST_TARGET_NAME} - added header: ${STONEYDSP_TEST_HEADER_FILE}")
    endforeach(STONEYDSP_TEST_HEADER_FILE IN LISTS STONEYDSP_TEST_HEADER_FILES)

    foreach(STONEYDSP_TEST_SOURCE_FILE IN LISTS STONEYDSP_TEST_SOURCE_FILES)
        message(DEBUG "Target: ${STONEYDSP_TEST_TARGET_NAME} - adding source: ${STONEYDSP_TEST_SOURCE_FILE}")
        target_sources(${STONEYDSP_TEST_TARGET_NAME}
            PRIVATE
            "${STONEYDSP_TEST_SOURCE_FILE}"
        )
        message(VERBOSE "Target: ${STONEYDSP_TEST_TARGET_NAME} - added source: ${STONEYDSP_TEST_SOURCE_FILE}")
    endforeach(STONEYDSP_TEST_SOURCE_FILE IN LISTS STONEYDSP_TEST_SOURCE_FILES)

    foreach(STONEYDSP_TEST_LINK_LIBRARY IN LISTS STONEYDSP_TEST_LINK_LIBRARIES_PRIVATE)
        message(DEBUG "Target: ${STONEYDSP_TEST_TARGET_NAME} - linking library (private): ${STONEYDSP_TEST_LINK_LIBRARY}")
        target_link_libraries(${STONEYDSP_TEST_TARGET_NAME}
            PRIVATE
            ${STONEYDSP_TEST_LINK_LIBRARY}
        )
        message(VERBOSE "Target: ${STONEYDSP_TEST_TARGET_NAME} - linked library (private): ${STONEYDSP_TEST_LINK_LIBRARY}")
    endforeach(STONEYDSP_TEST_LINK_LIBRARY IN LISTS STONEYDSP_TEST_LINK_LIBRARIES_PRIVATE)

    foreach(STONEYDSP_TEST_LINK_LIBRARY IN LISTS STONEYDSP_TEST_LINK_LIBRARIES_PUBLIC)
        message(DEBUG "Target: ${STONEYDSP_TEST_TARGET_NAME} - linking library (public): ${STONEYDSP_TEST_LINK_LIBRARY}")
        target_link_libraries(${STONEYDSP_TEST_TARGET_NAME}
            PUBLIC
            ${STONEYDSP_TEST_LINK_LIBRARY}
        )
        message(VERBOSE "Target: ${STONEYDSP_TEST_TARGET_NAME} - linked library (public): ${STONEYDSP_TEST_LINK_LIBRARY}")
    endforeach(STONEYDSP_TEST_LINK_LIBRARY IN LISTS STONEYDSP_TEST_LINK_LIBRARIES_PUBLIC)

    foreach(STONEYDSP_TEST_LINK_LIBRARY IN LISTS STONEYDSP_TEST_LINK_LIBRARIES_INTERFACE)
        message(DEBUG "Target: ${STONEYDSP_TEST_TARGET_NAME} - linking library (interface): ${STONEYDSP_TEST_LINK_LIBRARY}")
        target_link_libraries(${STONEYDSP_TEST_TARGET_NAME}
            INTERFACE
            ${STONEYDSP_TEST_LINK_LIBRARY}
        )
        message(VERBOSE "Target: ${STONEYDSP_TEST_TARGET_NAME} - linked library (interface): ${STONEYDSP_TEST_LINK_LIBRARY}")
    endforeach(STONEYDSP_TEST_LINK_LIBRARY IN LISTS STONEYDSP_TEST_LINK_LIBRARIES_INTERFACE)

    foreach(STONEYDSP_TEST_COMPILE_DEFINITION IN LISTS STONEYDSP_TEST_COMPILE_DEFINITIONS_PRIVATE)
        message(DEBUG "Target: ${STONEYDSP_TEST_TARGET_NAME} - adding compile definiton (private): ${STONEYDSP_TEST_COMPILE_DEFINITION}")
        target_compile_definitions(${STONEYDSP_TEST_TARGET_NAME}
            PRIVATE
            ${STONEYDSP_TEST_COMPILE_DEFINITION}
        )
        message(VERBOSE "Target: ${STONEYDSP_TEST_TARGET_NAME} - added compile definiton (private): ${STONEYDSP_TEST_COMPILE_DEFINITION}")
    endforeach(STONEYDSP_TEST_COMPILE_DEFINITION IN LISTS STONEYDSP_TEST_COMPILE_DEFINITIONS_PRIVATE)

    foreach(STONEYDSP_TEST_COMPILE_DEFINITION IN LISTS STONEYDSP_TEST_COMPILE_DEFINITIONS_PUBLIC)
        message(DEBUG "Target: ${STONEYDSP_TEST_TARGET_NAME} - adding compile definiton (public): ${STONEYDSP_TEST_COMPILE_DEFINITION}")
        target_compile_definitions(${STONEYDSP_TEST_TARGET_NAME}
            PUBLIC
            ${STONEYDSP_TEST_COMPILE_DEFINITION}
        )
        message(VERBOSE "Target: ${STONEYDSP_TEST_TARGET_NAME} - added compile definiton (public): ${STONEYDSP_TEST_COMPILE_DEFINITION}")
    endforeach(STONEYDSP_TEST_COMPILE_DEFINITION IN LISTS STONEYDSP_TEST_COMPILE_DEFINITIONS_PUBLIC)

    foreach(STONEYDSP_TEST_COMPILE_DEFINITION IN LISTS STONEYDSP_TEST_COMPILE_DEFINITIONS_INTERFACE)
        message(DEBUG "Target: ${STONEYDSP_TEST_TARGET_NAME} - adding compile definiton (interface): ${STONEYDSP_TEST_COMPILE_DEFINITION}")
        target_compile_definitions(${STONEYDSP_TEST_TARGET_NAME}
            INTERFACE
            ${STONEYDSP_TEST_COMPILE_DEFINITION}
        )
        message(VERBOSE "Target: ${STONEYDSP_TEST_TARGET_NAME} - added compile definiton (interface): ${STONEYDSP_TEST_COMPILE_DEFINITION}")
    endforeach(STONEYDSP_TEST_COMPILE_DEFINITION IN LISTS STONEYDSP_TEST_COMPILE_DEFINITIONS_INTERFACE)

    if(STONEYDSP_TEST_TARGET_INSTALL)
        # Generate export set
        install(TARGETS ${STONEYDSP_TEST_TARGET_NAME}
            EXPORT ${STONEYDSP_TEST_TARGET_NAME}Install
            COMPONENT ${STONEYDSP_TEST_TARGET_NAME}
            LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
            RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
            ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}"
            INCLUDES DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}"
            FILE_SET ${STONEYDSP_TEST_HEADERS_FILESET_NAME} DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}"
        )

        # Install export set
        install(EXPORT ${STONEYDSP_TEST_TARGET_NAME}Install
            FILE "${STONEYDSP_SLUG}-${STONEYDSP_TEST_TARGET_NAME}-targets.cmake"
            NAMESPACE ${STONEYDSP_BRAND}::${STONEYDSP_SLUG}::
            DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/${STONEYDSP_BRAND}"
        )
    endif()

    if(STONEYDSP_TEST_TARGET_EXPORT)
        # Generate export set
        export(
            SETUP ${STONEYDSP_TEST_TARGET_NAME}Export
            TARGET ${STONEYDSP_TEST_TARGET_NAME}
        )

        # Install export set
        export(
            EXPORT ${STONEYDSP_TEST_TARGET_NAME}Export
            FILE "lib/cmake/${STONEYDSP_BRAND}/${STONEYDSP_SLUG}-${STONEYDSP_TEST_TARGET_NAME}-targets.cmake"
            NAMESPACE ${STONEYDSP_BRAND}::${STONEYDSP_SLUG}::
        )
    endif()

    if(APPLE)
        add_custom_command(TARGET ${STONEYDSP_TARGET_NAME}
            POST_BUILD
            COMMAND install_name_tool -add_rpath "@loader_path/../lib" $<TARGET_FILE:${STONEYDSP_TEST_TARGET_NAME}>
        )
    endif()

    # Pass target properties to parent scope
    set(STONEYDSP_TEST_TARGET_NAME "${STONEYDSP_TEST_TARGET_NAME}" PARENT_SCOPE)
    set(STONEYDSP_TEST_VERSION_MAJOR "${STONEYDSP_TEST_VERSION_MAJOR}" PARENT_SCOPE)
    set(STONEYDSP_TEST_VERSION_MINOR "${STONEYDSP_TEST_VERSION_MINOR}" PARENT_SCOPE)
    set(STONEYDSP_TEST_VERSION_BUILD "${STONEYDSP_TEST_VERSION_BUILD}" PARENT_SCOPE)
    set(STONEYDSP_TEST_VERSION "${STONEYDSP_TEST_VERSION_MAJOR}.${STONEYDSP_TEST_VERSION_MINOR}.${STONEYDSP_TEST_VERSION_BUILD}")
    set(STONEYDSP_TEST_MAIN_CPP_FILE "${STONEYDSP_TEST_MAIN_CPP_FILE}" PARENT_SCOPE)
    set(STONEYDSP_TEST_TARGET_SOURCE_FILES "${STONEYDSP_TEST_TARGET_SOURCE_FILES}" PARENT_SCOPE)
    set(STONEYDSP_TEST_TARGET_LINK_LIBRARIES "${STONEYDSP_TEST_TARGET_LINK_LIBRARIES}" PARENT_SCOPE)
endfunction(stoneydsp_add_test)

#[==================================[Cleanup]==================================]
unset(_version)
