name: windows

on:
  push:
  workflow_dispatch:

concurrency:
  group: windows-latest-${{ github.ref }}
  cancel-in-progress: true

env:
  DISPLAY: :0
  CMAKE_BUILD_PARALLEL_LEVEL: 3
  CMAKE_INSTALL_PARALLEL_LEVEL: 3
  VCPKG_MAX_CONCURRENCY: 3
  VCPKG_MANIFEST_MODE: ON
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        msystem: [MINGW64, UCRT64, CLANG64]
        # TODO: CLANGARM64, MINGW32, CLANG32

    defaults:
      run:
        shell: msys2 {0}

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4
      with:
        submodules: true
        fetch-depth: 0

    - name: Set up MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MSYS
        update: true
        install: >-
          --needed
          base-devel
          coreutils
          git
          curl
          wget
          cmake
          ninja
          make
          tar
          zip
          unzip
          ccache
          autoconf
          automake
          libtool
          zstd
          vim
          tree

    - name: Install MINGW64 toolchain
      if: matrix.msystem == 'MINGW64'
      shell: msys2 {0}
      run: >-
          pacman -S --noconfirm
          mingw-w64-x86_64-toolchain
          mingw-w64-x86_64-cmake
          mingw-w64-x86_64-ninja
          mingw-w64-x86_64-make

    - name: Install CLANG64 toolchain
      if: matrix.msystem == 'CLANG64'
      shell: msys2 {0}
      run: >-
          pacman -S --noconfirm
          mingw-w64-clang-x86_64-toolchain
          mingw-w64-clang-x86_64-cmake
          mingw-w64-clang-x86_64-ninja
          mingw-w64-clang-x86_64-make

    - name: Install UCRT64 toolchain
      if: matrix.msystem == 'UCRT64'
      shell: msys2 {0}
      run: >-
          pacman -S --noconfirm
          mingw-w64-ucrt-x86_64-toolchain
          mingw-w64-ucrt-x86_64-cmake
          mingw-w64-ucrt-x86_64-ninja
          mingw-w64-ucrt-x86_64-make

    - name: Install CLANGARM64 toolchain
      if: matrix.msystem == 'CLANGARM64'
      shell: msys2 {0}
      run: >-
          pacman -S --noconfirm
          mingw-w64-clang-aarch64-toolchain
          mingw-w64-clang-aarch64-cmake
          mingw-w64-clang-aarch64-ninja
          mingw-w64-clang-aarch64-make

    - name: Install MINGW32 toolchain
      if: matrix.msystem == 'MINGW32'
      shell: msys2 {0}
      run: >-
          pacman -S --noconfirm
          mingw-w64-i686-toolchain
          mingw-w64-i686--cmake
          mingw-w64-i686--ninja
          mingw-w64-i686-make

    - name: Enable GitHub Actions Cache backend
      uses: actions/github-script@v7
      with:
        script: |
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

    - name: Build with make
      shell: msys2 {0}
      env:
        MSYSTEM: ${{ matrix.msystem }}
      run: make workflow BUILD_TEST=1

    - name: Deployment build
      shell: msys2 {0}
      env:
        MSYSTEM: ${{ matrix.msystem }}
      run: make BUILD_TEST=1

    - name: Run build
      shell: msys2 {0}
      env:
        MSYSTEM: ${{ matrix.msystem }}
      run: make run BUILD_TEST=1

    - name: List artefact directories
      shell: msys2 {0}
      env:
        MSYSTEM: ${{ matrix.msystem }}
      run: tree ./install
